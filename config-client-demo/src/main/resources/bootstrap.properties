#使用步骤：
# 1，在配置中心后端对接的源码管理系统中上传配置文件，
#  例如针对不同场景应用不同配置文件
# 默认配置   ：http://106.2.20.167:10080/dengjq/config-repos/blob/master/repos/config-client.properties
# 开发环境配置：http://106.2.20.167:10080/dengjq/config-repos/blob/master/repos/config-client-dev.properties
# 生成环境配置：http://106.2.20.167:10080/dengjq/config-repos/blob/master/repos/config-client-prod.properties
#  文件内容如下：
#   spring.datasource.username=default-user
# 2，在bootstrap.properties中增加如下配置

#指定应用服务名，
spring.application.name=config-client

#指定配置文件保存的git/svn中的标签，默认为master
spring.cloud.config.label=master

#指定应用使用配置profile，对应spring.profiles.active值,默认为default,即使用{application}.properties文件配置
#本例中使用{application}-{profile}.properties配置文件
spring.cloud.config.profile=dev

#指定配置中心地址，通过上述配置，指定应用使用git/svn上的config-client-dev.properties或者config-client-dev.yml
#作为服务配置文件
spring.cloud.config.uri= http://localhost:8888/

server.port=8881